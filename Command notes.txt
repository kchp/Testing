Git Bash

Initial setup:

	git config --list (list configurations)
	git config --global user.name "<name>" (change username)
	git config --global user.email "<email>" (change email)


Start project:

Navigate to project directory in Bash, using CD
	(cd ~     - move to workspace directory)
	(cd ..    - change to parent directory)
	(cd <dir> - change to directory, for directories with <space> in the name, use 'name')
	(ls       - list content of directory)
	(pwd      - show current directory)

When in desired directory
	git init (start project in current directory)
	

Managing files:

Staging
	git add . (stage all changes, made to project, for commit)
	git add <file> (stage changes, made to file, for commit)
	git reset HEAD <file> (unstage changes)

Delete file
	git rm <file> (remove file from repository and working directory. Does not commit removal)

Commit
	git commit -m "<message>" (commit present state, use message field to identify commit)
	git commit -a (automatically stage and commit everything that have been changed/deleted.
				   Take care when using this command, as it WILL grab everything that has been changed)

Commit log
	git log (show commit log)
	git log --author="<name>" (show commit log from specified user)
	
Differences
	git diff (shows differences between repository and actual file. This only shows differences between
			  repository and working copy, does not show staged changes)
	git diff --staged (shows changes between staged and repository)

Revert to previous state
	git checkout -- <file> (replace working copy with what is in the repository)
	git checkout <commit no.> -- <file> (replace working copy with version in commit history)
										(don't need to write the whole commit number, the first 4-7 is enough)



Github:

Create a repository on github (uncheck create with README)
	
	if connecting to new repository
		git init (in desired folder)
		git add .
		git commit -m "first commit"
		
	setup remote location
		git remote add <nickname> <URL> (give remote location a nickname)
		
	Push to repository
		git push -u <nickname> master (Bash will ask for user/pass for GitHub)


	
